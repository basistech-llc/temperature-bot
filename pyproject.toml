#
# poetry config virtualenvs.in-project true --scope=global
# poetry install  (by default, installs all groups)
# poetry add <module>
# poetry add --group dev black
# poetry run python script.py
# poetry run pytest
# poetry lock
# poetry show
# poetry show --tree

[project]
name = "temperature-bot"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "google-auth",
    "google-auth-oauthlib",
    "google-auth-httplib2",
    "google-api-python-client",
    "websockets",
    "requests",
    "jinja2",
    "flask",
    "python-dotenv", # If you're using it for environment variables
    "pyyaml (>=6.0.2,<7.0.0)",
    "pylint (>=3.3.7,<4.0.0)",
    "tabulate (>=0.9.0,<0.10.0)",
    "flask-pydantic (>=0.13.1,<0.14.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "mypy (>=1.17.0,<2.0.0)",
]

authors = [
	{name="Simson Garfinkel", email="simsong@basistech.com"}
]

readme = "README.md"

[build-system]
requires = ["poetry-core>=2.0.0, <3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "*"
ruff-lsp = "*"
pytest = "*"
pytest-env = "*"
pytest-cov = "*"
coverage = "*"
livereload = "*"
playwright = "*"
mypy = "*"

[tool.poetry]
package-mode = false

[tool.ruff]
exclude = ["lib/"]

[tool.ruff.lint]
ignore = ["ANN201", "ANN401"]  # Ignore missing return type annotations and Any types

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = false
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "lib.*",
    "tests.*"
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "app.util"
]
ignore_missing_imports = true
